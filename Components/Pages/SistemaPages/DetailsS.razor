@page "/DetailsS"
@rendermode InteractiveServer
@inject SistemasService sistemasService
@inject NavigationManager NavigationManager

<PageTitle>Registro de Tickets</PageTitle>
<div class="container">

	<div class="card shadow-lg">
		<div class="card-header alert-secondary" style="color: white; background-color: royalblue;">
			<NavLink class="btn btn-light float-end" href="/CreateS">Registrar Sistema</NavLink>
			<h1><strong>Consultas</strong></h1>
			<h3>Sistema</h3>
		</div>

		<div class="col-12">
			<table class="table table-striped table-bordered justify-content">
				<thead>
					<tr class="text-center">
						<th>Id</th>
						<th>Nombre</th>
						<th>Editar</th>
						<th>Eliminar</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var sistemas in sistemasList)
					{
						<tr class="text-center">
							<td>@sistemas.ID</td>
							<td>@sistemas.Nombre</td>
							<td><a href="/Edit/ID=@sistemas.ID"><em><i class="btn btn-primary bi bi-pencil" /></em></a></td>
							<td><a href="/Delete/ID=@sistemas.ID"><em><i class="btn btn-danger bi bi-trash" /></em></a></td>
						</tr>
					}
				</tbody>
			</table>
		</div>


		@*Footer*@
		<div class="card-footer">
			<p>Sistemas registrados: @sistemasList.Count</p>
		</div>
	</div>
</div>

@code {
	public Sistemas sistema { get; set; } = new Sistemas();
	public List<Sistemas> sistemasList = new List<Sistemas>();

	protected override async Task OnInitializedAsync()
	{
		Expression<Func<Sistemas, bool>> criterio = sistema => sistema.ID > 0;
		sistemasList = await sistemasService.Listar(criterio);
	}

	void VolverAInicio()
	{
		NavigationManager.NavigateTo("/DetailsS");
	}
}
