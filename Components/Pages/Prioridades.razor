@page "/Prioridades"
@page "/Prioridades/{PrioridadesId:int}"
@inject PrioridadesBLL prioridadesBLL
@rendermode InteractiveServer

@code {
        [Parameter]
        public int PrioridadesId { get; set; }

    public ProyectoManager.Models.Prioridades prioridades { get; set; } = new ProyectoManager.Models.Prioridades();

    protected override void OnInitialized()
    {
        if (PrioridadesId > 0)
        {
            this.prioridades.PrioridadesId = PrioridadesId;
            this.Buscar();
        }
    }

    void Buscar()
    {
        var encontrada = prioridadesBLL.Buscar(prioridades.PrioridadesId);
        if (encontrada != null)
        {
            this.prioridades = encontrada;
        }
        else
        {
            Console.WriteLine("Error: la prioridad no se encontró.");
        }
    }

    void Guardar()
    {
        if (!Validar())
        {
            return;
        }
        if (prioridadesBLL.Save(this.prioridades))this.Nuevo();
    }

    void Eliminar()
    {

    }

    void Nuevo()
    {
        this.prioridades = new Models.Prioridades();
    }

    bool Validar()
    {
        if (string.IsNullOrWhiteSpace(prioridades.Descripcion))
        {
            Console.WriteLine("Error: La descripción de la prioridad no puede estar vacío.");
            return false;
        }

        return true;
    }
}