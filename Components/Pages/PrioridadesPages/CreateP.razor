@page "/CreateP"
@inject PrioridadesService prioridadesService;
@rendermode InteractiveServer

<PageTitle>Registro de Tickets</PageTitle>
<EditForm Model="prioridad" OnValidSubmit="Guardar" FormName="prioridades">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
             <div class="card-header" style="color: white; background-color: royalblue;">
                <NavLink class="btn btn-light float-end" href="DetailsP">Consultar Prioridades</NavLink> 
                <h1><strong>Crear</strong></h1>
                <h3>Prioridades</h3>
            </div>
            <div class=card-body>

                @*Prioridades Id:*@
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <label><strong>Id prioridades:</strong></label>
                    <div class="input-group mb-3">
                        <InputNumber @bind-Value="prioridad.PrioridadesId" class="form-control" 
                        aria-describedby="BotonBuscar" />
                        <button @onclick="Buscar" class="btn btn-primary bi bi-search-heart" type="button" 
                        id="BotonBuscar"></button>
                    </div>
                </div>

                @*Descripcion*@

                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <label class="form-label" for="Descripcion"><strong>Descripci&oacute;n:</strong></label>
                    <InputText @bind-Value="prioridad.Descripcion" class="form-control" />
                    <ValidationMessage For="@(() => prioridad.Descripcion)" class="text-danger" />
                </div>

                @*Dias Compromiso*@
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <label class="form-label" for="DiasCompromiso"><strong>D&iacute;as de compromiso:</strong></label>
                    <InputNumber @bind-Value="prioridad.DiasCompromiso" class="form-control" />
                    <ValidationMessage For="@(() => prioridad.DiasCompromiso)" />
                </div>

            </div>
            <div class="card-footer d-flex justify-content">
                <div class="col-xs-18 col-sm-12 col-md-10 col-lg-30 col-xl-40">
                    <button type="submit" class="btn btn-primary bi bi-floppy"> Create <i class="oi oi-document" />
                        </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Prioridades prioridad { get; set; } = new Prioridades();

    public string mensajeError = "";
    public string? mensaje;
    public string? mensajeElim;

    public async Task Buscar()
    {
        var encontrado = await prioridadesService.FindAsync(prioridad.PrioridadesId);
        if (encontrado != null)
            prioridad = encontrado;
        else
            mensajeError = "No se encontró la prioridad";
    }

    public async Task Guardar()
    {
        var guardo = await prioridadesService.Guardar(prioridad);
        if (guardo)
        {
            mensaje = "Se guardó";
            Nuevo();
        }
        else
            mensajeError = "No se pudo guardar";
    }
 
    void Nuevo()
    {
        this.prioridad = new Prioridades();
        mensajeError = string.Empty;
    }

    public async Task Eliminar()
    {
        var eliminado = await prioridadesService.Eliminar(prioridad);

        if (eliminado)
        {
            mensajeError = "Se eliminó correctamente";
            Nuevo();
        }
        else
        {
            mensajeError = "No se pudo eliminar la prioridad";
        }
    }
}