@page "/DetailsP"
@inject PrioridadesService prioridadesService
@rendermode InteractiveServer

<PageTitle>Registro de Tickets</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header alert-secondary" style="color: white; background-color: royalblue;">
            <NavLink class="btn btn-light float-end" href="/CreateP">Registrar Prioridades</NavLink>
            <h1><strong>Consultas</strong></h1>
            <h3>Prioridades</h3>
        </div>

        <table class="table table-striped table-bordered">
            <thead>
                <tr class="text-center">
                    <th>Descripción</th>
                    <th>Días compromiso</th>
                    <th>Editar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var prioridadItem in prioridadesService.GetPrioridades())
                {
                    <tr class="text-center" >
                        <td>@prioridadItem.Descripcion</td>
                        <td>@prioridadItem.DiasCompromiso</td>
						<td><button class="btn btn-primary bi bi-pencil" @onclick="() => Editar(prioridadItem)"></button></td>
						<td><button class="btn btn-danger bi bi-trash" @onclick="() => prioridadesService.Eliminar(prioridadItem)"></button></td>
                        
                    </tr>
                    @if (prioridad != null && prioridad.PrioridadesId == prioridadItem.PrioridadesId)
                    {
                        <tr>
                            <td colspan="4" >
                                 <EditForm Model="prioridad" OnValidSubmit="EditarPrioridad" FormName="prioridades">
                                    <div class="form-group ">
                                        <label for="Descripcion">Descripción:</label>
                                        <input id="Descripcion" @bind="prioridad.Descripcion" class="form-control" />
                                    </div>
                                    <div class="form-group col-span-4">
                                        <label for="DiasCompromiso">Días compromiso:</label>
                                        <input id="DiasCompromiso" @bind="prioridad.DiasCompromiso" class="form-control" />
                                    </div>
                                    <button type="submit" class="btn btn-success bi bi-floppy">Guardar<i class="oi oi-document" /></button>
                                     </EditForm>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    public Prioridades prioridad { get; set; } = new Prioridades();
    public string? mensaje = "";

    private void Editar(Prioridades prioridadItem)
    {
        this.prioridad = new Prioridades
            {
                PrioridadesId = prioridadItem.PrioridadesId,
                Descripcion = prioridadItem.Descripcion,
                DiasCompromiso = prioridadItem.DiasCompromiso
            };
    }

    private async Task EditarPrioridad()
    {
        await prioridadesService.Modificar(prioridad);
        prioridad = null;
    }

    public async Task Guardar()
    {
        var guardo = await prioridadesService.Guardar(prioridad);

        if (guardo)
        {
            mensaje = "Se guardó correctamente";
        }
        else
        {
            mensaje = "No se pudo guardar, intente de nuevo";
        }
    }

    void Nuevo()
    {
        this.prioridad = new Prioridades();
        mensaje = string.Empty;
    }

}
